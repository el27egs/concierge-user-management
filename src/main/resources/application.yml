# Server settings
server:
  port: 8090
  # Enabling response compression to get a better performance for responses from service APIs
  compression:
    enabled: true
    min-response-size: 512
    mime-types: text/html, text/xml, text/plain, text/css, text/javascript, application/javascript, application/json

# log4j setting  - Use this without logback.xml
#log4j:
#  rootUTCLogger: info

# logging configuration for Hibernate  - Use this without logback.xml
#logging:
#  level:
#    org:
#      hibernate:
#        SQL: off #debug
#        type:
#          descriptor:
#            sql: off #trace

# Spring configuration
spring:
  # Service or application name
  application:
    name: concierge-user-management-service

  # Adding this configuration using public-key-location with a dummy public key
  # to continue with tests, we must check OAuth part to do this
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: classpath:id_rsa.pub

  # Setting to create a distributed trace id for calls between services
  sleuth:
    sampler:
      probability: 1.0

  # Settings for liquibase. It is in charge of manage the version for database structure instead of JPA
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml

  # Settings for JPA, Cache and other features related
  jpa:
    show-sql: false #true - Use this without logback.xml
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: false #true - Use this without logback.xml
        generate_statistics: false #true - Use this without logback.xml
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region.factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        javax:
          cache:
             missing_cache_strategy: create
             provider: org.ehcache.jsr107.EhcacheCachingProvider
        jdbc:
          batch_size: 50
          time_zone: UTC     
      javax:
        persistence:
          query:
            timeout: 60000

# Custom setting for the app        
app:
  # Custom settings for Kafka in our app
  account-entries:
    enabled: false
    kafka:
      topic: account-entries

  # Custom XSS Filter for all the requests. It will remove not valid characters
  xssfilter:
    enabled: true

  # Custom Datasource configuration
  datasource:
    username: ${USER_MANAGEMENT_DB_USER:postgres}
    password: ${USER_MANAGEMENT_DB_PASSWORD:postgres}
    readWrite:
      url: jdbc:postgresql://${USER_MANAGEMENT_DB_READ_WRITE_HOST:35.224.95.119}:${USER_MANAGEMENT_DB_READ_WRITE_PORT:5432}/${USER_MANAGEMENT_DB_NAME:concierge-user-management}?useUnicode=yes&characterEncoding=UTF-8&createDatabaseIfNotExist=true
    readOnly:
      url: jdbc:postgresql://${USER_MANAGEMENT_DB_READ_ONLY_HOST:34.133.146.4}:${USER_MANAGEMENT_DB_READ_ONLY_PORT:5432}/${USER_MANAGEMENT_DB_NAME:concierge-user-management}?useUnicode=yes&characterEncoding=UTF-8&createDatabaseIfNotExist=true

  info:
    website: https://ngineapps.com
    name: @project.artifactId@
    version: @project.version@